<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.8-->

<plugin>
  <name>EasyBase Generator</name>
  <description>Code generation tool for EasyBase</description>
  <groupId>com.easybase</groupId>
  <artifactId>generator</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <goalPrefix>easybase</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <requiredJavaVersion>17</requiredJavaVersion>
  <requiredMavenVersion>3.9.0</requiredMavenVersion>
  <mojos>
    <mojo>
      <goal>all</goal>
      <description>Goal to build all services. Usage: mvn easybase:all</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.easybase.generator.mojo.BuildAllMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>rootDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The root project directory.</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <rootDirectory implementation="java.io.File" default-value="${project.basedir}/../.."/>
      </configuration>
    </mojo>
    <mojo>
      <goal>build</goal>
      <description>Goal to build a specific service. Usage: mvn easybase:build -Dservice=user</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.easybase.generator.mojo.BuildMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>appsDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The directory containing app modules.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>service</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The service name to build.</description>
        </parameter>
      </parameters>
      <configuration>
        <appsDirectory implementation="java.io.File" default-value="${project.basedir}/../../apps"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <service implementation="java.lang.String">${service}</service>
      </configuration>
    </mojo>
    <mojo>
      <goal>clean</goal>
      <description>Goal to clean a specific service. Usage: mvn easybase:clean -Dservice=user</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.easybase.generator.mojo.CleanMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>appsDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The directory containing app modules.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>service</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The service name to clean.</description>
        </parameter>
      </parameters>
      <configuration>
        <appsDirectory implementation="java.io.File" default-value="${project.basedir}/../../apps"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <service implementation="java.lang.String">${service}</service>
      </configuration>
    </mojo>
    <mojo>
      <goal>generate</goal>
      <description>Goal to generate a service from a YAML definition file. Usage: mvn easybase:generate -Dservice=user</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.easybase.generator.mojo.GenerateMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated code.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>service</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The service name to generate.</description>
        </parameter>
        <parameter>
          <name>yamlDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The directory containing YAML files.</description>
        </parameter>
      </parameters>
      <configuration>
        <outputDirectory implementation="java.io.File" default-value="${project.basedir}/../../apps"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <service implementation="java.lang.String">${service}</service>
        <yamlDirectory implementation="java.io.File" default-value="${project.basedir}/src/main/resources/sample"/>
      </configuration>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
      <type>jar</type>
      <version>2.2</version>
    </dependency>
    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <type>jar</type>
      <version>2.3.32</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>3.9.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>3.9.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>3.9.0</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.plexus</artifactId>
      <type>jar</type>
      <version>0.3.5</version>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <type>jar</type>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>3.4.2</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <type>jar</type>
      <version>2.6.0</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.inject</artifactId>
      <type>jar</type>
      <version>0.3.5</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <type>jar</type>
      <version>2.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <type>jar</type>
      <version>3.13.0</version>
    </dependency>
  </dependencies>
</plugin>