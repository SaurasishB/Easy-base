package com.example.product.api.base.model.mapper;

import com.example.product.model.Product;
import com.example.product.api.model.dto.*;
import org.springframework.stereotype.Component;
    import java.util.UUID;

/**
* Base mapper for Product.
* Generated by EasyBase Code Generator.
*/
@Component
public class ProductBaseMapper {

/**
* Converts an entity to a DTO.
*
* @param entity the entity
* @return the DTO
*/
public ProductDTO toDTO(Product entity) {
if (entity == null) {
return null;
}

ProductDTO dto = new ProductDTO();
        dto.setId(entity.getId());
        dto.setName(entity.getName());
        dto.setDescription(entity.getDescription());
        dto.setPrice(entity.getPrice());
        dto.setSku(entity.getSku());
        dto.setStatus(entity.getStatus());

    dto.setCreatedDate(entity.getCreatedDate());
    dto.setLastModifiedDate(entity.getLastModifiedDate());
        dto.setCreatedBy(entity.getCreatedBy());

return dto;
}

/**
* Converts an entity to a response DTO.
*
* @param entity the entity
* @return the response DTO
*/
public ProductResponseDTO toResponseDTO(Product entity) {
if (entity == null) {
return null;
}

ProductResponseDTO dto = new ProductResponseDTO();
        dto.setId(entity.getId());
        dto.setName(entity.getName());
        dto.setDescription(entity.getDescription());
        dto.setPrice(entity.getPrice());
        dto.setSku(entity.getSku());
        dto.setStatus(entity.getStatus());

    dto.setCreatedDate(entity.getCreatedDate());
    dto.setLastModifiedDate(entity.getLastModifiedDate());
        dto.setCreatedBy(entity.getCreatedBy());

return dto;
}

/**
* Converts a request DTO to an entity.
*
* @param requestDTO the request DTO
* @return the entity
*/
public Product toEntity(ProductRequestDTO requestDTO) {
if (requestDTO == null) {
return null;
}

Product entity = new Product();
updateEntity(entity, requestDTO);

return entity;
}

/**
* Updates an entity from a request DTO.
*
* @param entity the entity to update
* @param requestDTO the request DTO with updated data
*/
public void updateEntity(Product entity, ProductRequestDTO requestDTO) {
if (entity == null || requestDTO == null) {
return;
}

        entity.setName(requestDTO.getName());
        entity.setDescription(requestDTO.getDescription());
        entity.setPrice(requestDTO.getPrice());
        entity.setSku(requestDTO.getSku());
        entity.setStatus(requestDTO.getStatus());
}

}