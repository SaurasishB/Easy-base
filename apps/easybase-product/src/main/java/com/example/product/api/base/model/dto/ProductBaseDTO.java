package com.example.product.api.base.model.dto;

    import java.util.UUID;
    import jakarta.validation.constraints.NotBlank;
    import jakarta.validation.constraints.Size;
    import jakarta.validation.constraints.NotNull;
    import jakarta.validation.constraints.Min;

/**
* Base DTO for Product.
* Generated by EasyBase Code Generator.
*/
public class ProductBaseDTO {
        private java.util.UUID id;
        private String name;
        private String description;
        private Double price;
        private String sku;
        private ProductStatus status;

    // Audit fields
    private java.time.Instant createdDate;
    private java.time.Instant lastModifiedDate;
        private String createdBy;

// Getters and setters
public java.util.UUID getId() {
return id;
}

public void setId(java.util.UUID id) {
this.id = id;
}
public String getName() {
return name;
}

    public void setName(String name) {
    this.name = name;
    }
public String getDescription() {
return description;
}

    public void setDescription(String description) {
    this.description = description;
    }
public Double getPrice() {
return price;
}

    public void setPrice(Double price) {
    this.price = price;
    }
public String getSku() {
return sku;
}

    public void setSku(String sku) {
    this.sku = sku;
    }
public ProductStatus getStatus() {
return status;
}

    public void setStatus(ProductStatus status) {
    this.status = status;
    }

    // Audit getters and setters
    public java.time.Instant getCreatedDate() {
    return createdDate;
    }

    public void setCreatedDate(java.time.Instant createdDate) {
    this.createdDate = createdDate;
    }

    public java.time.Instant getLastModifiedDate() {
    return lastModifiedDate;
    }

    public void setLastModifiedDate(java.time.Instant lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
    }

        public String getCreatedBy() {
        return createdBy;
        }

        public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        }

}