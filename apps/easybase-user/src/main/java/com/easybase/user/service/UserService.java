package com.easybase.user.service;

import com.easybase.user.model.User;
import com.easybase.user.web.dto.UserRequestDTO;
import com.easybase.user.web.dto.UserResponseDTO;

import java.util.List;
import java.util.Optional;

import com.easybase.user.model.enums.UserStatus;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import java.util.UUID;
import java.time.Instant;

import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import com.easybase.department.model.Department;

/**
 * Service interface for User operations.
 * Generated by EasyBase Code Generator.
 */
public interface UserService {

    /**
     * Creates a new User.
     *
     * @param requestDTO The data for the new entity
     * @return The created entity
     */
    UserResponseDTO create(UserRequestDTO requestDTO);

    /**
     * Updates an existing User.
     *
     * @param id         The ID of the entity to update
     * @param requestDTO The updated data
     * @return The updated entity
     */
    UserResponseDTO update(UUID id, UserRequestDTO requestDTO);

    /**
     * Retrieves an User by ID.
     *
     * @param id The ID of the entity to retrieve
     * @return The entity, if found
     */
    Optional<UserResponseDTO> findById(UUID id);

    /**
     * Retrieves all User entities with pagination.
     *
     * @param pageable Pagination information
     * @return A page of entities
     */
    Page<UserResponseDTO> findAll(Pageable pageable);

    /**
     * Deletes an User by ID.
     *
     * @param id The ID of the entity to delete
     * @return True if the entity was deleted, false otherwise
     */
    boolean deleteById(UUID id);

    /**
     * Searches for User entities.
     *
     * @param search   The search query
     * @param filter   The filter expression
     * @param sort     The sort expression
     * @param pageable Pagination information
     * @return A page of matching entities
     */
    Page<UserResponseDTO> search(String search, String filter, String sort, Pageable pageable);
}