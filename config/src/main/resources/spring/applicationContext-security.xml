<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- Enable method security -->
    <security:global-method-security pre-post-annotations="enabled"
                                     secured-annotations="enabled"/>

    <!-- HTTP Security Configuration -->
    <security:http auto-config="false"
                   use-expressions="true"
                   create-session="stateless">

        <!-- Public endpoints -->
        <security:intercept-url pattern="/api/public/**" access="permitAll"/>
        <security:intercept-url pattern="/api/auth/**" access="permitAll"/>
        <security:intercept-url pattern="/api/health/**" access="permitAll"/>
        <security:intercept-url pattern="/api/info/**" access="permitAll"/>

        <!-- Admin endpoints -->
        <security:intercept-url pattern="/api/admin/**" access="hasRole('ADMIN')"/>

        <!-- Authenticated endpoints -->
        <security:intercept-url pattern="/api/**" access="isAuthenticated()"/>

        <!-- Static resources -->
        <security:intercept-url pattern="/static/**" access="permitAll"/>
        <security:intercept-url pattern="/css/**" access="permitAll"/>
        <security:intercept-url pattern="/js/**" access="permitAll"/>
        <security:intercept-url pattern="/images/**" access="permitAll"/>
        <security:intercept-url pattern="/" access="permitAll"/>
        <security:intercept-url pattern="/index.html" access="permitAll"/>

        <!-- Default deny for protected resources -->
        <security:intercept-url pattern="/protected/**" access="isAuthenticated()"/>

        <!-- CORS -->
        <security:cors/>

        <!-- CSRF disabled for REST API -->
        <security:csrf disabled="true"/>

        <!-- Headers -->
        <security:headers>
            <security:frame-options policy="DENY"/>
            <security:content-type-options/>
            <security:xss-protection/>
        </security:headers>

        <!-- Custom authentication entry point for development -->
        <security:http-basic entry-point-ref="customAuthenticationEntryPoint"/>

    </security:http>

    <!-- Simple Authentication Manager for Development -->
    <security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
                <security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN"/>
                <security:user name="user" password="{noop}user" authorities="ROLE_USER"/>
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>

    <!-- Custom Authentication Entry Point -->
    <bean id="customAuthenticationEntryPoint"
          class="com.easyBase.security.CustomAuthenticationEntryPoint"/>

    <!-- CORS Configuration -->
    <bean id="corsConfigurationSource"
          class="org.springframework.web.cors.CorsConfigurationSource">
        <constructor-arg>
            <map>
                <entry key="/**">
                    <bean class="org.springframework.web.cors.CorsConfiguration">
                        <property name="allowedOriginPatterns" value="*"/>
                        <property name="allowedMethods" value="GET,POST,PUT,DELETE,OPTIONS"/>
                        <property name="allowedHeaders" value="*"/>
                        <property name="allowCredentials" value="true"/>
                        <property name="maxAge" value="3600"/>
                    </bean>
                </entry>
            </map>
        </constructor-arg>
    </bean>

    <!-- Password Encoder -->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <constructor-arg value="12"/>
    </bean>

</beans>